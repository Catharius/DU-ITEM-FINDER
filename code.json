{"slots":{"0":{"name":"screen","type":{"events":[],"methods":[]}},"1":{"name":"core","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"btnManager:processMouseDown(screen,x,y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"0"},"key":"0"},{"code":"btnManager:processMouseUp(screen,x,y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseUp(x,y)","slotKey":"0"},"key":"1"},{"code":"clearScreenData()","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"2"},{"code":"screen.clear()\n\nfor i,marker in ipairs(markers_list) do\n     core.deleteSticker(marker)\nend    \n","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"3"},{"code":"-- Get all containers and sort them by name\nfor i,idelem in ipairs(core.getElementIdList()) do\n    if core.getElementTypeById(idelem) == \"container\" then\n         name = core.getElementNameById(idelem)\n         if not string.match(name, \"XX\") then\n         \ttable.insert(sorted_container_table, Element.new(idelem,name)) \n         end   \n         --table.insert(sorted_container_table, Element.new(idelem,core.getElementNameById(idelem))) \n    end  \nend\ntable.sort(sorted_container_table,sortalphabeticaly)","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"4"},{"code":"btnManager:processMouseHoldDown(screen.getMouseX(),screen.getMouseY())\nbtnManager:processMouseOver(screen,screen.getMouseX(),screen.getMouseY())","filter":{"args":[],"signature":"update()","slotKey":"-2"},"key":"5"},{"code":"--------------\n-- GLOBAL VARS\n--------------\nnumber_keys = {\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"}\nletter_first_row_keys = {\"A\",\"Z\",\"E\",\"R\",\"T\",\"Y\",\"U\",\"I\",\"O\",\"P\"}\nletter_second_row_keys = {\"Q\",\"S\",\"D\",\"F\",\"G\",\"H\",\"J\",\"K\",\"L\",\"M\"}\nletter_third_row_keys = {\"W\",\"X\",\"C\",\"V\",\"B\",\"N\",\"[\",\"]\"}\nsearch_string = \"\"\nnbchar = 0\n\nbuttons_list = {}\nsorted_container_table = {}\nselection = {}\nmarkers_list = {} ","filter":{"args":[],"signature":"start()","slotKey":"-3"},"key":"6"},{"code":"----\n-- Element Class\n-- @elem_id : the id of the element\n-- @elem_name : the name of the element \n----\nElement = {}\nElement.__index = Element;\n\nfunction Element.new(elem_id,elem_name)\n    local self = setmetatable({}, Element)\n    self.id = elem_id\n    self.name = elem_name\n    return self\nend","filter":{"args":[],"signature":"start()","slotKey":"-3"},"key":"7"},{"code":"----\n-- ClickableZone Class (used to define clickable zones)\n----\nClickableZone = {}\nClickableZone.__index = ClickableZone;\n\nfunction ClickableZone.new(id_button,id_mouseover,id_mouseholddown,x, y, hx, hy, function_mouse_up,function_mouse_down,function_mouse_holddown)\n    local self = setmetatable({}, ClickableZone)\n    self.id_button = id_button\n    self.id_mouseover = id_mouseover\n    self.id_mouseholddown = id_mouseholddown\n    self.x = x\n    self.y = y\n    self.hx = hx\n    self.hy = hy\n    self.function_mouse_up = function_mouse_up\n    self.function_mouse_down = function_mouse_down\n    self.function_mouse_holddown = function_mouse_holddown\n    return self\nend\n\nfunction ClickableZone.contains(self, x, y)\n    return x > self.x and x < self.x + self.hx and\n    y > self.y and y < self.y + self.hy\nend\n\nfunction ClickableZone.getIds(self)\n\treturn {self.id_button,self.id_mouseover,self.id_mouseholddown}     \nend\n\n","filter":{"args":[],"signature":"start()","slotKey":"-3"},"key":"8"},{"code":"----\n-- ButtonManager Class (used to create buttons)\n----\nButtonManager = {}\nButtonManager.__index = ButtonManager;\n\nfunction ButtonManager.new()\n    local self = setmetatable({}, ButtonManager)\n    self.zones = {}\n    self.mouseisdown = 0\n    return self\nend\n\nfunction ButtonManager.createClickableZone(self, id_button, id_mouseover, id_mouseholddown, x, y, hx, hy, function_mouse_up,function_mouse_down,function_mouse_holddown)\n    self.zones[id_button] = ClickableZone.new(id_button, id_mouseover, id_mouseholddown, x, y, hx, hy, function_mouse_up,function_mouse_down,function_mouse_holddown) \t  \t  \t\nend\n\nfunction ButtonManager.createAdvancedButtonArea(self, screen, x, y, hx, hy, button_html, button_style, mouseover_html, mouseover_style, mouseholddown_html, mouseholddown_style, function_mouse_up, function_mouse_down, function_mouse_holddown)\n    button = \"<div class='\"..button_style..\"'>\" .. button_html .. \"</div>\"\n    button_mouseover = \"<div class='\"..mouseover_style..\"'>\" .. mouseover_html .. \"</div>\"\n    id_button = screen.addContent(x,y,button)\n    id_mouseover = screen.addContent(x,y,button_mouseover)\n    screen.showContent(id_mouseover, 0) \n    self:createClickableZone(id_button,id_mouseover,id_mouseholddown, x/100, y/100, hx/100, hy/100, function_mouse_up,function_mouse_down,function_mouse_holddown)\n    return {id_button,id_mouseover}\nend\n\nfunction ButtonManager.processMouseUp(self, screen, x, y)\n    for key, area in pairs(self.zones) do\n        if area:contains(x, y) and area.function_mouse_up ~= nil then\n            area.function_mouse_up()\n            self.mouseisdown = 0\n            screen.showContent(key, 1) \n            screen.showContent(area.id_mouseover, 0)\n            screen.showContent(area.id_mouseholddown, 0)\n        elseif not area:contains(x, y) and area.function_mouse_up ~= nil then\n            screen.showContent(key, 1)\n            screen.showContent(area.id_mouseover, 0)\n            screen.showContent(area.id_mouseholddown, 0)    \n        end\n    end\nend\n\nfunction ButtonManager.processMouseDown(self, screen, x, y)\n    for key, area in pairs(self.zones) do\n        if area:contains(x, y) and area.function_mouse_down ~= nil then\n            area.function_mouse_down()\n            self.mouseisdown = 1\n            screen.showContent(key, 0) \n            screen.showContent(area.id_mouseover, 0)\n            screen.showContent(area.id_mouseholddown, 1)\n        end\n    end\nend\n\nfunction ButtonManager.processMouseHoldDown(self, x, y)\n    for key, area in pairs(self.zones) do\n        if area:contains(x, y) and area.function_mouse_holddown ~= nil and area.function_mouse_up ~= nil and area.function_mouse_down ~= nil and self.mouseisdown == 1 then\n            area.function_mouse_holddown()\n        end\n    end\nend\n\nfunction ButtonManager.processMouseOver(self, screen, x, y)\n    for key, area in pairs(self.zones) do\n        if self.mouseisdown == 0 and area.id_mouseover ~= nil then\n            if area:contains(x, y) then\n                screen.showContent(key, 0) \n                screen.showContent(area.id_mouseover, 1)\n            else \n                screen.showContent(key, 1) \n                screen.showContent(area.id_mouseover, 0)\n            end\n        end    \n    end\nend","filter":{"args":[],"signature":"start()","slotKey":"-3"},"key":"9"},{"code":"----\n-- Other functions\n----\nfunction sortalphabeticaly(a,b)\n    a = core.getElementNameById(a.name)\n    b = core.getElementNameById(b.name)\n    return a < b\nend\n\nfunction selectItem(item_id)\n    table.insert(selection,item_id)\n    local x,y,z = table.unpack(core.getElementPositionById(item_id))\n    marker1 = core.spawnArrowSticker(x-126.5,y-128,(z-128), \"down\")\n    marker2 = core.spawnArrowSticker(x-126.5,y-128,(z-128), \"down\")\n    core.rotateSticker(marker2,0,0,90)\n    \n    marker3 = core.spawnArrowSticker(x-129.5,y-128,(z-128), \"down\")\n    marker4 = core.spawnArrowSticker(x-129.5,y-128,(z-128), \"down\")\n    core.rotateSticker(marker4,0,0,90)\n    \n    --marker5 = core.spawnArrowSticker(x-128+2,y-128,(z-128), \"east\")\n    --marker7 = core.spawnArrowSticker(x-128-2,y-128,(z-128), \"west\")\n    --marker9 = core.spawnArrowSticker(x-128,y-128,(z-128)+2, \"down\") \n    table.insert(markers_list, marker1)\n    table.insert(markers_list, marker2)\n    --table.insert(markers_list, marker3)\n    --table.insert(markers_list, marker5)\n    --table.insert(markers_list, marker7)\n    --table.insert(markers_list, marker9)\n    \n    search(search_string)\nend\n\nfunction search(name)\n    clearScreenData()\n    \n    local line_pos_x =5\n    local line_pos_y = 15\n\n    local max_result = 5\n    for i,elem in ipairs(sorted_container_table) do\n        key_style = \"search_result\"\n        key_hover_style = \"search_result hover\"\n        key_push_style = \"search_result\"\n        if string.match(elem.name, name) then\n            for _,selectedElem in ipairs(selection) do\n                if elem.id == selectedElem then\n                    key_style = \"selected_search_result\" \n                end    \n            end    \n            btnManager:createAdvancedButtonArea(screen, line_pos_x, line_pos_y,90,4,elem.name,key_style,elem.name,key_hover_style,elem.name,key_push_style,function() selectItem(elem.id)  end,function() end,function() end)\n            line_pos_y=line_pos_y+5\n            max_result = max_result-1\n            if max_result == 0 then\n                break\n            end    \n        end\n    end    \nend   \n\n-- Search bar\nfunction updateSearchBar(letter)\n    nbchar = nbchar+1\n    search_string = search_string..letter\n    screen.resetContent(search_zone,[[<div class=\"search_bar\">]]..search_string..[[</div>]])\n    if nbchar>2 then\n        search(search_string)\n    end\nend    \n\nfunction deleteChar()\n    if nbchar > 0 then\n        nbchar=nbchar-1\n        search_string = search_string:sub(1, #search_string - 1)\n        screen.resetContent(search_zone,[[<div class=\"search_bar\">]]..search_string..[[</div>]])\n    end \n    if nbchar<= 2 then\n        --Clear des boutons présent\n        clearScreenData()\n    end   \nend\n\nfunction clearScreenData() \n    screen.clear()\n    -- Declaring a buttonManager\n    btnManager = ButtonManager.new()\t\n    -- Add CSS to screen first and the empty search bar\n    screen.addContent(0,0,[[<style>div {font-style:arial;} .selected_search_result {color:green;font-size:6vh;width:90vw} .search_result {color:white;font-size:6vh;width:90vw} .hover {color:yellow} .delkey {width:12vw;height:10vh;overflow:hidden;font-size:8vh;text-align:center;} .key {width:7vw;height:10vh;overflow:hidden;font-size:8vh;text-align:center;}  .key_style {background-color:white;color:black;} .key_hover_style {background-color:black;color:white;} .key_push_style {background-color:white;color:black;} .search_bar {width:98vw;height:10vh;-moz-appearance: textfield;-webkit-appearance: textfield;background-color: white;background-color: -moz-field;border: 1px solid darkgray;box-shadow: 1px 1px 1px 0 lightgray inset;font: -moz-field;font: -webkit-small-control;margin-top: 5px;padding: 2px 3px;color:black;font-size:8vh;}</style>]]) -- Add the CSS\n    search_zone = screen.addContent(1,1,[[<div class=\"search_bar\">]]..search_string..[[</div>]])\n    if dosearch then\n        search(search_string)\n    end    \n    --Création du clavier virtuel\n    key_style = \"key key_style\"\n    key_hover_style = \"key key_hover_style\"\n    key_push_style = \"key key_push_style\"\n\n    key_width = 7\n    key_height = 10\n    line_spacing=8\n\n    --Keyboard numbers\n    line_pos_y = 55\n    line_pos_x=7\n    for i,current_key in ipairs(number_keys) do\n        btnManager:createAdvancedButtonArea(screen, line_pos_x, line_pos_y,key_width,key_height, current_key,key_style,current_key,key_hover_style,current_key,key_push_style,function() updateSearchBar(current_key)  end,function() end,function() end)\t\n        line_pos_x=line_pos_x+line_spacing\n    end\n    btnManager:createAdvancedButtonArea(screen, line_pos_x, line_pos_y,12,10, \"DEL\",\"del\"..key_style,\"DEL\",\"del\"..key_hover_style,\"DEL\",\"del\"..key_push_style,function() deleteChar()  end,function() end,function() end)\t\n\n    --Keyboard letter first line\n    line_pos_y = 66\n    line_pos_x=10\n    for i,current_key in ipairs(letter_first_row_keys) do\n        btnManager:createAdvancedButtonArea(screen, line_pos_x, line_pos_y,key_width,key_height, current_key,key_style,current_key,key_hover_style,current_key,key_push_style,function() updateSearchBar(current_key)  end,function() end,function() end)\t\n        line_pos_x=line_pos_x+line_spacing\n    end\n    -- Keyboard second line\n    line_pos_y = 77\n    line_pos_x=12\n    for i,current_key in ipairs(letter_second_row_keys) do\n        btnManager:createAdvancedButtonArea(screen, line_pos_x, line_pos_y,key_width,key_height, current_key,key_style,current_key,key_hover_style,current_key,key_push_style,function() updateSearchBar(current_key)  end,function() end,function() end)\t\n        line_pos_x=line_pos_x+line_spacing\n    end\n    -- Keyboard third line\n    line_pos_y = 88\n    line_pos_x=14\n    for i,current_key in ipairs(letter_third_row_keys) do\n        btnManager:createAdvancedButtonArea(screen, line_pos_x, line_pos_y,key_width,key_height, current_key,key_style,current_key,key_hover_style,current_key,key_push_style,function() updateSearchBar(current_key)  end,function() end,function() end)\t\n        line_pos_x=line_pos_x+line_spacing\n    end\n    btnManager:createAdvancedButtonArea(screen, line_pos_x, line_pos_y,12,10, \"\",\"del\"..key_style,\"\",\"del\"..key_hover_style,\"\",\"del\"..key_push_style,function() updateSearchBar(\" \")  end,function() end,function() end)\t\n    screen.activate()\nend","filter":{"args":[],"signature":"start()","slotKey":"-3"},"key":"10"}],"methods":[],"events":[]}
